Javascript
- High Level
- Interpreted
- Dynamic
- Object Oriented
- Functional
- Prototypal
- Multi-paradigm

Javascript is a High Level, Interpreted, Dynamic, Object Oriented, Functional, Prototypal, Multi-paradigm programming language.


Varriables
  - var : mutable value , global scope
  - let : block scope
  - const : immutable value
  
Data types
  - number
  - string
  - boolean
  - undefined
  - null
  - object
  - array


Operators 
  - Arithmetic Operators
    - + 
    - -
    - *
    - /
    - %
    - ++
    - --
  - Assignment Operators
    - =
    - +=
    - -=
    - *=
    - /=
    - %=
    - <<=
    - >>=
    - >>>=
    - &=
    - ^=
    - |=
    - ??=
  - Comparison Operators
    - >
    - <
    - >=
    - <=
    - ==
    - !=
    - ===
    - !==


Template Literals
  - Template literals are enclosed by backticks (\`) and can contain placeholders.
  - Placeholders are defined using the dollar sign ($) followed by curly braces ({}).
  - The placeholders can be used to insert values into the template literal.

  cosole.log(`Hello, ${name}!`);

Boolean Logical Operands

AND -- &&
OR -- ||
NOT -- !



Control Statements
if
else
switch
for
while
do while


Ternary Operator

Statement Vs Expression

condition ? expression1 : expression2


FUNCTIONS
1. 
    Function Declaration
    function fnName(parameters) {
      // function body
      // return expression;
    }

    Function Invocation
    name(parameters);

2. Arrow Functions
   const add = (a, b) => a + b;